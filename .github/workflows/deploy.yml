name: Deploy

on:
  push:
    branches:
      - main
      - develop
      - next

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]

    env:
      TAG: ${{ github.ref == 'refs/heads/next' && 'experimental' || github.ref == 'refs/heads/main' && 'stable' || github.ref == 'refs/heads/develop' && 'latest' || 'fail' }}

    steps:
    - name: Fail if unsupported branch
      if: env.TAG == 'fail'
      run: |
        echo "This workflow should not run on this branch."
        exit 1

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-

    - name: Build with jpackage
      run: ./gradlew clean jpackage

    - name: Bundle (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd build/jpackage
        dir
        echo "${{ env.TAG }}" > aibtra/app/aibtra.bundletype
        7z a -tzip aibtra-${{ env.TAG }}-windows.zip aibtra\*

    - name: Bundle (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd build/jpackage
        ls -al
        echo "${{ env.TAG }}" > aibtra/lib/app/aibtra.bundletype
        tar -czf aibtra-${{ env.TAG }}-linux.tar.gz aibtra/*

    - name: Bundle (macOS)
      if: matrix.os == 'macOS-latest'
      run: |
        cd build/jpackage
        ls -al
        echo "${{ env.TAG }}" > aibtra.app/Contents/app/aibtra.bundletype
        tar -czf aibtra-${{ env.TAG }}-macos.tar.gz aibtra.app

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: build/jpackage/aibtra-${{ env.TAG }}-*

  release:
    name: "Release"
    runs-on: "ubuntu-latest"
    needs: build

    env:
      TAG: ${{ github.ref == 'refs/heads/next' && 'experimental' || github.ref == 'refs/heads/main' && 'stable' || github.ref == 'refs/heads/develop' && 'latest' || 'fail' }}

    steps:
    - name: Fail if unsupported branch
      if: env.TAG == 'fail'
      run: |
        echo "This workflow should not run on this branch."
        exit 1

    - name: Download artifacts
      uses: actions/download-artifact@v3

    - name: Determine release tag
      id: determine-tag
      run: |
        echo "tag=${{ env.TAG }}" >> $GITHUB_ENV

    - name: Upload release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "${{ env.tag }}"
        prerelease: ${{ github.ref != 'refs/heads/main' }}
        title: "tag=${{ env.TAG }} release"
        files: |
          binaries/*
